//! `SeaORM` Entity. Generated by sea-orm-codegen 0.10.6

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "exerciseable")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::exercise::Entity")]
    Exercise,
    #[sea_orm(has_many = "super::exerciseable_external::Entity")]
    ExerciseableExternal,
    #[sea_orm(has_many = "super::exerciseable_notecard::Entity")]
    ExerciseableNotecard,
}

impl Related<super::exercise::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Exercise.def()
    }
}

impl Related<super::exerciseable_external::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ExerciseableExternal.def()
    }
}

impl Related<super::exerciseable_notecard::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ExerciseableNotecard.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
